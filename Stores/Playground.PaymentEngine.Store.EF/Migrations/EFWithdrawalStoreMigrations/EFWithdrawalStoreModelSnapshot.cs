// <auto-generated />
using System;
using Microsoft.EntityFrameworkCore;
using Microsoft.EntityFrameworkCore.Infrastructure;
using Microsoft.EntityFrameworkCore.Storage.ValueConversion;
using Npgsql.EntityFrameworkCore.PostgreSQL.Metadata;
using Playground.PaymentEngine.Store.EF.Withdrawals;

#nullable disable

namespace Playground.PaymentEngine.Store.EF.Migrations
{
    [DbContext(typeof(EFWithdrawalStore))]
    partial class EFWithdrawalStoreModelSnapshot : ModelSnapshot
    {
        protected override void BuildModel(ModelBuilder modelBuilder)
        {
#pragma warning disable 612, 618
            modelBuilder
                .HasAnnotation("ProductVersion", "6.0.0")
                .HasAnnotation("Relational:MaxIdentifierLength", 63);

            NpgsqlModelBuilderExtensions.UseIdentityByDefaultColumns(modelBuilder);

            modelBuilder.Entity("Playground.PaymentEngine.Store.Withdrawals.Model.Withdrawal", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<decimal>("Amount")
                        .HasColumnType("numeric");

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<DateTime>("DateRequested")
                        .HasColumnType("timestamp with time zone");

                    b.Property<bool>("IsDeleted")
                        .HasColumnType("boolean");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<long>("WithdrawalStatusId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("Withdrawal", "withdrawals");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Amount = 50m,
                            CustomerId = 44L,
                            DateRequested = new DateTime(2021, 8, 12, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            TenantId = 1L,
                            WithdrawalStatusId = 3L
                        },
                        new
                        {
                            Id = 2L,
                            Amount = 50m,
                            CustomerId = 44L,
                            DateRequested = new DateTime(2021, 8, 13, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            TenantId = 1L,
                            WithdrawalStatusId = 3L
                        },
                        new
                        {
                            Id = 3L,
                            Amount = 460m,
                            CustomerId = 74L,
                            DateRequested = new DateTime(2021, 8, 17, 0, 0, 0, 0, DateTimeKind.Utc),
                            IsDeleted = false,
                            TenantId = 1L,
                            WithdrawalStatusId = 3L
                        });
                });

            modelBuilder.Entity("Playground.PaymentEngine.Store.Withdrawals.Model.WithdrawalGroup", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<long>("CustomerId")
                        .HasColumnType("bigint");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.Property<string>("WithdrawalIdsString")
                        .IsRequired()
                        .HasColumnType("text")
                        .HasColumnName("WithdrawalIds");

                    b.HasKey("Id");

                    b.ToTable("WithdrawalGroup", "withdrawals");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            CustomerId = 44L,
                            TenantId = 1L,
                            WithdrawalIdsString = "1, 2"
                        },
                        new
                        {
                            Id = 2L,
                            CustomerId = 74L,
                            TenantId = 1L,
                            WithdrawalIdsString = "3"
                        });
                });

            modelBuilder.Entity("Playground.PaymentEngine.Store.Withdrawals.Model.WithdrawalStatus", b =>
                {
                    b.Property<long>("Id")
                        .ValueGeneratedOnAdd()
                        .HasColumnType("bigint");

                    NpgsqlPropertyBuilderExtensions.UseIdentityByDefaultColumn(b.Property<long>("Id"));

                    b.Property<string>("Name")
                        .IsRequired()
                        .HasColumnType("text");

                    b.Property<long>("TenantId")
                        .HasColumnType("bigint");

                    b.HasKey("Id");

                    b.ToTable("WithdrawalStatus", "withdrawals");

                    b.HasData(
                        new
                        {
                            Id = 1L,
                            Name = "requested",
                            TenantId = 1L
                        },
                        new
                        {
                            Id = 2L,
                            Name = "flashed",
                            TenantId = 1L
                        },
                        new
                        {
                            Id = 3L,
                            Name = "batched",
                            TenantId = 1L
                        },
                        new
                        {
                            Id = 4L,
                            Name = "approved",
                            TenantId = 1L
                        },
                        new
                        {
                            Id = 5L,
                            Name = "rejected",
                            TenantId = 1L
                        },
                        new
                        {
                            Id = 6L,
                            Name = "failed",
                            TenantId = 1L
                        },
                        new
                        {
                            Id = 7L,
                            Name = "partially-processed",
                            TenantId = 1L
                        },
                        new
                        {
                            Id = 8L,
                            Name = "processed",
                            TenantId = 1L
                        });
                });
#pragma warning restore 612, 618
        }
    }
}
